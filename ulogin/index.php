<?phpclass uLogin {    private $DB;    public function __construct($params) {        $Register = Register::getInstance();        $this->DB = $Register['DB'];    }    public function install() {        $this->DB->query("ALTER TABLE `users` ADD `provider` TEXT CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL ;");        $this->DB->query("ALTER TABLE `users` ADD `full_name` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL AFTER `name` ;");        $this->DB->query("CREATE TABLE `users_ulogin` (            `id` INT( 11 ) NOT NULL AUTO_INCREMENT ,            `identity` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL ,            `nickname` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL ,            PRIMARY KEY ( `id` )        )");        return array('status' => 1);    }    public function common($params) {        if (isset($_GET['action']) and $_GET['action']=='ulogin') {            if (isset($_POST['token']) or isset($_POST['nickname'])) {                // если пришел с сайта ulogin                if (isset($_POST['token'])) {                    $s = file_get_contents('http://ulogin.ru/token.php?token=' . $_POST['token'] . '&host=' . $_SERVER['HTTP_HOST']);                    $user = json_decode($s, true);                    if (isset($user['error'])) {                        // костыль, т.к. хук before_view вызывается несколько раз                        if (isset($_SESSION['ulogin']['html'])) {                            return $_SESSION['ulogin']['html'];                        }                        if (isset($_SESSION['ulogin']['redirect'])) {                            header('Location: '.$_SESSION['ulogin']['redirect']);                            return;                        }                        return 'error';                    }                    unset($_SESSION['ulogin']['html']);                    unset($_SESSION['ulogin']['redirect']);                }                // если пришел с промежуточной страницы, где извещалось о проблеме                if (isset($_POST['nickname'])) {                    if (isset($_SESSION['nickname']['html'])) {                        return $_SESSION['nickname']['html'];                    }                    if (isset($_SESSION['nickname']['redirect'])) {                        header('Location: '.$_SESSION['nickname']['redirect']);                        return;                    }                    unset($_SESSION['nickname']['html']);                    unset($_SESSION['nickname']['redirect']);                    if (isset($_SESSION['nickname']['data'])) {                        $user = $_SESSION['nickname']['data'];                        $user['nickname'] = $_POST['nickname'];                    } else {                        return 'error';                    }                }            } else {                return;            }            if (!isset($user['old_nickname'])) {                $user['old_nickname'] = $user['nickname'];            }            $changname = $this->DB->query("SELECT *                FROM `users_ulogin`                WHERE `identity` LIKE '".$user['network'].";".$user['identity']."'");            if (isset($changname[0])) {                $user['nickname'] = $changname[0]['nickname'];            }            $markets = array();            if (preg_match("#[^- _0-9a-zА-Яа-я]#ui", $user['nickname'])) {                $markets['{{ message }}'] = 'Ник <strong>'.$user['nickname'].'</strong> содержит недопустимые символы.                     Пожалуйста, выберите другой ник, под которым Вы будете зарегистрированы на сайте.';                return $this->error($markets, $user);            }            if (mb_strlen($user['nickname']) < 3 || mb_strlen($user['nickname']) > 20) {                $markets['{{ message }}'] = 'Ник <strong>'.$user['nickname'].'</strong> меньше 3 или более 20 символов.                     Пожалуйста, выберите другой ник, под которым Вы будете зарегистрированы на сайте.';                return $this->error($markets, $user);            }            // поиск людей с таким ником            $Register = Register::getInstance();            $usersModel = $Register['ModManager']->getModelInstance('users');            $res = $usersModel->getSameNics($user['nickname']);            if (is_array($res) && count($res) > 0) {                $prs = explode(';', $res[0]['provider']);                if (count($prs) > 0 and in_array($user['network'], $prs)) {                    $_SESSION['user'] = $res[0];                    setcookie('autologin', 'yes', time() + 3600 * 24 * Config::read('cookie_time'), '/');                    setcookie('userid', $res[0]['id'], time() + 3600 * 24 * Config::read('cookie_time'), '/');                    setcookie('password', $res[0]['passw'], time() + 3600 * 24 * Config::read('cookie_time'), '/');                    header('Location: http://'.$_SERVER['HTTP_HOST']);                    return;                } else {                    $markets['{{ message }}'] = 'Ник <strong>'.$user['nickname'].'</strong> занят.                         Пожалуйста, выберите другой ник, под которым Вы будете зарегистрированы на сайте.';                    return $this->error($markets, $user);                }            }            // ошибок нет, регистрируем            $password = substr(md5(uniqid()),0,6);            $data = array(                'name'       => $user['nickname'],                'passw'      => md5crypt($password),                'email'      => $user['email'],                'puttime'    => date("Y-m-j H:i:s"),                'last_visit' => date("Y-m-j H:i:s"),                'provider'  => $user['network'],                'status' => 1            );            if (isset($user['first_name']) and isset($user['last_name'])) {                $data['full_name'] = $user['first_name'].' '.$user['last_name'];            }            if (isset($user['phone'])) {                $data['telephone'] = $user['phone'];            }            if (isset($user['city'])) {                $data['city'] = $user['city'];            }            if (isset($user['sex'])) {                $data['pol'] = ($user['sex']='1') ? 'm' : 'f';            }                       if (isset($user['bdate'])) {                $udata = explode(".", $user['bdate']);                $data['bday']   = $udata[0];                $data['bmonth'] = $udata[1];                $data['byear']  = $udata[2];            }            $Register = Register::getInstance();            $Register['DB']->save('users', $data);            $data['id'] = mysql_insert_id();            // запись если ник изменён            if ($user['old_nickname'] != $user['nickname']) {                $Register = Register::getInstance();                $Register['DB']->save('users_ulogin', array(                    'identity'      => $user['network'].";".$user['identity'],                    'nickname'      => $user['nickname']                ));            }            $Register = Register::getInstance();            $Register['DB']->save('messages', array(                'to_user'      => $data['id'],                'from_user'      => 1,                'sendtime'      => date("Y-m-j H:i:s"),                'subject'      => 'Добро пожаловать',                'message'      => 'Здравствуйте. Благодарим за регистрацию на нашем сайте.'.                    'Ваши реквизиты для входа на сайт:'.                    '[b]Логин[/b]: '.$user['nickname'].                    '[b]Пароль[/b]: '.$password.                    'Вы можете сменить пароль в настройках вашего профиля',            ));            $_SESSION['user'] = $data;            setcookie('autologin', 'yes', time() + 3600 * 24 * Config::read('cookie_time'), '/');            setcookie('userid', $data['id'], time() + 3600 * 24 * Config::read('cookie_time'), '/');            setcookie('password', $data['passw'], time() + 3600 * 24 * Config::read('cookie_time'), '/');            $_SESSION['ulogin']['redirect']='http://'.$_SERVER['HTTP_HOST'].'/users/info/'.$data['id'];            header('Location: '.$_SESSION['ulogin']['redirect']);            unset($_SESSION['nickname']['data']);            return;        }        $config = json_decode(file_get_contents(R.'sys/plugins/before_view_ulogin/config.json'), true);        $email_activate = Config::read('email_activate');        $marker = '<script src="//ulogin.ru/js/ulogin.js"></script>                    <div id="uLogin" data-ulogin="                        display=small;                        fields='.$config['fields'].';                        optional='.$config['optional'].';                        providers='.$config['providers'].';                        hidden='.$config['hidden'].';                        redirect_uri=http%3A%2F%2F'.$_SERVER['HTTP_HOST'].'%3Faction%3Dulogin;';        $marker .= (!empty($email_activate)) ? 'verify=1;' : '';        $marker .= '"></div>';        return str_replace('{{ ulogin }}', $marker, $params);    }    public function error($markets, $user) {        $markets['{{ nickname }}'] = $user['nickname'];        $template = file_get_contents(dirname(__FILE__).'/template/error.html');        $_SESSION['ulogin']['html'] = str_replace(array_keys($markets), $markets, $template);        $_SESSION['nickname']['data'] = $user;        return $_SESSION['ulogin']['html'];    }}?>